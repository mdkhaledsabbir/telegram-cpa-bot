import telebot
from telebot import types
import json
import os

TOKEN = os.environ.get('TOKEN')
ADMIN_ID = int(os.environ.get('ADMIN_ID'))

bot = telebot.TeleBot(TOKEN)

if not os.path.exists("users.json"):
    with open("users.json", "w") as f:
        json.dump({}, f)

with open("users.json", "r") as f:
    users = json.load(f)

TASKS = {
    "Task 1": "https://tinyurl.com/37xxp2an",
    "Task 2": "https://tinyurl.com/4vc76fw5",
    "Task 3": "https://tinyurl.com/yyherfxt",
    "Task 4": "https://tinyurl.com/25nt96v9"
}

@bot.message_handler(commands=['start'])
def start(message):
    user_id = str(message.from_user.id)
    ref = message.text.split(" ")[1] if len(message.text.split()) > 1 else None

    if user_id not in users:
        users[user_id] = {"ref_by": ref, "refs": [], "balance": 0}
        if ref and ref != user_id and ref in users:
            users[ref]["refs"].append(user_id)
            users[ref]["balance"] += 10
    save_users()

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("ЁЯз╛ ржЯрж╛рж╕рзНржХ", "ЁЯУд рж╕рзНржХрзНрж░рж┐ржирж╢ржЯ ржжрж┐ржи", "ЁЯТ░ ржмрзНржпрж╛рж▓рзЗржирзНрж╕", "ЁЯУд ржЙржЗржержбрзНрж░", "ЁЯСе рж░рзЗржлрж╛рж░")
    bot.send_message(message.chat.id, "рж╕рзНржмрж╛ржЧрждржо! ржирж┐ржЪрзЗрж░ ржЕржкрж╢ржи ржерзЗржХрзЗ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи:", reply_markup=markup)

@bot.message_handler(func=lambda m: m.text == "ЁЯз╛ ржЯрж╛рж╕рзНржХ")
def show_tasks(message):
    msg = ""
    for i, (title, link) in enumerate(TASKS.items(), 1):
        msg += f"{i}. {title}: {link}\n"
    msg += "\nЁЯСЙ ржкрзНрж░рждрж┐ржЯрж┐ ржЯрж╛рж╕рзНржХрзЗрж░ ржЬржирзНржп рзйржЯрж┐ рж╕рзНржХрзНрж░рж┐ржирж╢ржЯ ржжрж┐ржиред"
    bot.send_message(message.chat.id, msg)

@bot.message_handler(func=lambda m: m.text == "ЁЯТ░ ржмрзНржпрж╛рж▓рзЗржирзНрж╕")
def balance(message):
    user = users.get(str(message.from_user.id), {})
    bot.send_message(message.chat.id, f"ЁЯУК ржЖржкржирж╛рж░ ржмрзНржпрж╛рж▓рзЗржирзНрж╕: {user.get('balance', 0)} ржЯрж╛ржХрж╛")

@bot.message_handler(func=lambda m: m.text == "ЁЯУд ржЙржЗржержбрзНрж░")
def withdraw(message):
    user_id = str(message.from_user.id)
    bal = users.get(user_id, {}).get("balance", 0)
    if bal >= 1000:
        bot.send_message(message.chat.id, "тЬЕ ржЖржкржирж╛рж░ ржЙржЗржержбрзНрж░ рж░рж┐ржХрзЛрзЯрзЗрж╕рзНржЯ ржЧрзНрж░рж╣ржг ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ, ржПржкрзНрж░рзБржн рж╣рж▓рзЗ ржЬрж╛ржирж╛ржирзЛ рж╣ржмрзЗред")
        bot.send_message(ADMIN_ID, f"ЁЯУд ржЗржЙржЬрж╛рж░ {user_id} ржЙржЗржержбрзНрж░ ржЪрж╛рзЯ, ржмрзНржпрж╛рж▓рзЗржирзНрж╕: {bal} ржЯрж╛ржХрж╛")
    else:
        bot.send_message(message.chat.id, f"тЭМ ржЙржЗржержбрзНрж░ ржХрж░рж╛рж░ ржЬржирзНржп ржЕржирзНрждржд рззрзжрзжрзж ржЯрж╛ржХрж╛ ржерж╛ржХрждрзЗ рж╣ржмрзЗред ржЖржкржирж╛рж░ ржмрзНржпрж╛рж▓рзЗржирзНрж╕: {bal} ржЯрж╛ржХрж╛")

@bot.message_handler(func=lambda m: m.text == "ЁЯСе рж░рзЗржлрж╛рж░")
def refer(message):
    uid = str(message.from_user.id)
    bot.send_message(message.chat.id, f"ЁЯФЧ ржЖржкржирж╛рж░ рж░рзЗржлрж╛рж░ рж▓рж┐ржВржХ:\nhttps://t.me/myoffer363bot?start={uid}")

@bot.message_handler(func=lambda m: m.text == "ЁЯУд рж╕рзНржХрзНрж░рж┐ржирж╢ржЯ ржжрж┐ржи")
def request_screenshot(message):
    bot.send_message(message.chat.id, "ЁЯЦ╝я╕П ржжрзЯрж╛ ржХрж░рзЗ рзйржЯрж┐ рж╕рзНржХрзНрж░рж┐ржирж╢ржЯ ржжрж┐ржи (ржПржХржЯрж┐ ржПржХржЯрж┐ ржХрж░рзЗ)ред")

@bot.message_handler(content_types=['photo'])
def handle_screenshot(message):
    bot.send_message(message.chat.id, "тЬЕ рж╕рзНржХрзНрж░рж┐ржирж╢ржЯ ржЧрзНрж░рж╣ржг ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ, ржЪрзЗржХ ржХрж░рзЗ ржПржкрзНрж░рзБржн ржХрж░рж╛ рж╣ржмрзЗред")
    bot.forward_message(ADMIN_ID, message.chat.id, message.message_id)

def save_users():
    with open("users.json", "w") as f:
        json.dump(users, f, indent=2)

print("тЬЕ Bot is running...")
bot.infinity_polling()
